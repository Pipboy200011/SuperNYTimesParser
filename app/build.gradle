plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

apply from: '../dependencies.gradle'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {

    signingConfigs {
        release {
            keyAlias 'supernytimesparser'
            keyPassword 'supernytimesparser111'
            storeFile file('keystore/release.jks')
            storePassword 'supernytimesparser111'
        }
        debug {
            keyAlias 'debug'
            keyPassword 'android'
            storeFile file('keystore/debug.jks')
            storePassword 'android'
        }
    }

    compileSdkVersion COMPILE_SDK_VERSION
    defaultConfig {
        applicationId "com.n.supernytimesparser"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode 1
        versionName computeVersionName()

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".dev"
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def versionName = variant.versionName
            outputFileName = "${variant.mergedFlavor.applicationId}-${buildType.name}-${versionName}.apk"
        }
    }

    viewBinding {
        enabled = true
    }
}

def computeVersionName() {
    if (VERSION_HOTFIX > 0) {
        return String.format('%d.%d.%d', VERSION_MAJOR, VERSION_MINOR, VERSION_HOTFIX)
    } else {
        return String.format('%d.%d', VERSION_MAJOR, VERSION_MINOR)
    }
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation androidSupport.appcompat
    implementation androidSupport.material
    implementation androidSupport.constraintLayout
    implementation androidSupport.recyclerview
    implementation androidSupport.preference
    implementation androidSupport.kotlinStdLib
    implementation androidSupport.legacySupport

    implementation libs.dagger
    kapt libs.daggerCompiler
    annotationProcessor libs.daggerProcessor

    implementation libs.rxJava
    implementation libs.rxAndroid

    implementation libs.retrofit
    implementation libs.retrofitConverter
    implementation libs.retrofitRxAdapter
    implementation libs.okHttpInterceptor

    implementation libs.guava

    implementation libs.glide
    annotationProcessor libs.glideCompiler
    implementation libs.androidSVG
    implementation libs.circleImageView

    implementation libs.shimmer

    testImplementation libs.junit
    testImplementation libs.mockito
    testImplementation libs.mockitoInline
    testImplementation libs.robolectric
    testImplementation libs.hamcrest
    testImplementation libs.archCore

    androidTestImplementation(libs.mockito) { exclude group: 'net.bytebuddy' }
    androidTestImplementation androidSupport.espresso
    androidTestImplementation androidSupport.testRunner
}